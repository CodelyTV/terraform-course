name: 'Plan'

on:
  pull_request:
    types: [opened, reopened, synchronize]

permissions:
  contents: read
  pull-requests: write
env:
  TG_VERSION: v0.38.6
  TF_VERSION: 1.2.5
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  terraform:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 2

    - name: Check out base ref
      run: |
        git fetch --no-tags --depth=1 origin $GITHUB_BASE_REF
        git fetch --no-tags --depth=1 origin $GITHUB_HEAD_REF

    - name: Get working directory
      run: |
        CODE_DIR=$(git --no-pager diff --diff-filter=d --raw --name-only origin/$GITHUB_BASE_REF origin/$GITHUB_HEAD_REF | egrep -E "\.tf\$|^\/test|^\/pre|^\/pro|^\/all" | grep ".*\/" -o | uniq)
        echo "WORKING_DIR=$CODE_DIR" >> $GITHUB_ENV

    #Setup

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2.0.3
      with:
        terraform_version: $TF_VERSION

    - name: Setup Infracost
      uses: infracost/actions/setup@v2
      # See https://github.com/infracost/actions/tree/master/setup for other inputs
      # If you can't use this action, see Docker images in https://infracost.io/cicd
      with:
        api-key: ${{ secrets.INFRACOST_API_KEY }}
      
    - name: Install Terragrunt
      run: |
       curl -s -qL -o terragrunt https://github.com/gruntwork-io/terragrunt/releases/download/$TG_VERSION/terragrunt_linux_amd64
       chmod +x terragrunt
       sudo mv terragrunt /bin

    - name: Verify Terragrunt version
      run: terragrunt --version

    - name: Verify Terraform version
      run: terraform --version

    #Run      

    - name: Terragrunt init
      run: terragrunt init -input=false -reconfigure --terragrunt-working-dir ${{ env.WORKING_DIR }}
      
    - name: Terragrunt plan
      id: plan
      run: terragrunt plan --terragrunt-working-dir ${{ env.WORKING_DIR }} -out workspace.plan

    - name: Post Plan
      uses: robburger/terraform-pr-commenter@v1
      with:
        commenter_type: plan
        commenter_input: ${{ format('{0}{1}', steps.plan.outputs.stdout, steps.plan.outputs.stderr) }}
        commenter_exitcode: ${{ steps.plan.outputs.exitcode }}

    # infracost

    # # Checkout the base branch of the pull request (e.g. main/master).
    - name: Checkout base branch
      uses: actions/checkout@v2
      with:
        ref: '${{ github.event.pull_request.base.ref }}'

    # Generate Infracost JSON file as the baseline.
    - name: Generate Infracost cost estimate baseline
      id: infracost-baseline
      run: |
        mkdir -p ${{ env.WORKING_DIR }}
        touch ${{ env.WORKING_DIR }}main.tf
        infracost breakdown --path=${{ env.WORKING_DIR }} \
                            --format=json \
                            --out-file=/tmp/infracost-base.json \
                            --terraform-force-cli

    # Checkout the current PR branch so we can create a diff.
    - name: Checkout PR branch
      uses: actions/checkout@v3

    # Generate an Infracost diff and save it to a JSON file.
    - name: Generate Infracost diff
      run: |
        infracost diff --path=${{ env.WORKING_DIR }} \
                        --format=json \
                        --compare-to=/tmp/infracost-base.json \
                        --out-file=/tmp/infracost.json
        infracost output --path /tmp/infracost.json --format table --out-file /tmp/report.table
        cat /tmp/report.table
    #Post comment
    - name: Post Infracost comment
      run: |
        infracost comment github --path /tmp/infracost.json \
                                  --repo $GITHUB_REPOSITORY  \
                                  --github-token ${{ github.token }} \
                                  --pull-request ${{ github.event.pull_request.number }} \
                                  --behavior update